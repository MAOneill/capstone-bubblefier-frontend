.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
  pointer-events: none;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.flexbox {
  display:flex;
  width:95%;
}
.photoComponent{
  width:600px;
  width:80vw;
  /* width can't be a percentage for the scroll box to work???? */
  overflow-x: scroll;

}
.photogrid {
  display:flex;
  /* flex-wrap: wrap; */

}
.gridbox {
  width:300px;
  height:300px;
  padding:10px;
}
.eachphoto {
  width:200px;
  height: 200px;

}
.eachphoto img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-fit: fill;

}
.navelement {
  padding:5px;
  color:white;
  margin: 5px;
}
#patterns {
  width:1px;  
}
.largersvg {
  width:100vh;
}
.puzzlesvg {
  width:100vh;
  /* height:1000px; */
  overflow:visible;
  transform: translate(50% 50%)
}
.thepuzzleContainer {

}

#pictureframe {
  object-fit:cover;
  /* THIS DETERMINES THE CIRCLE OVER ALL SIZE.... */
  width: 400px;
  height: 400px;
  /* YOU CAN HIDE THE VISIBILITY AND THE FUNCTIONALITY WILL STILL WORK */
}
.hidethis {
  visibility: hidden;
  /* display: none; */

}

.guessGrid {
  display: grid;
  grid-template-columns: 60% 40%;
}
#pictureframe img {
  object-fit:cover;
  /* fill is best - it will mimic what the slicing will do */
  object-fit: fill; 
  /* width:100%; */
  width: 400px;
  height: 400px; 
}
.guessingsize {
  width:80vh;
}
.answerlist {
  list-style: none;
  text-align: left;
}
.bright {
  background-color: yellow;
 filter: brightness(1.2);
 text-decoration: none;
 color:black;
}
.dull {
  background-color:grey;
 filter: brightness(.8);
 text-decoration: none;

}


/* ********** MEDIA QUERIES ******************* */

/* Landscape */
@media screen and (orientation:landscape) {
	.flexbox {
    flex-direction: column;
   }
}
 /* Portrait styles */
 @media screen and (orientation:portrait) {
	.flexbox {
    flex-direction: column;
   }

}
  @media (pointer: coarse) {
    .menu {
        display:none;
    } }




